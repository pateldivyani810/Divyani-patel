<section class="product-grid-section"> 
  <div class="container">
    <div class="product-grid">
      {% for block in section.blocks %}
        {% assign product = all_products[block.settings.product] %}
        {% if product %}
          <div class="product-card" data-product-handle="{{ block.settings.product.handle }}">
            <img src="{{ product.featured_image | image_url: width: 350, height: 350, crop: 'center' }}"
                alt="{{ product.featured_image.alt | escape }}" width="350" height="350" loading="lazy">
            <button class="quick-view-btn" data-handle="{{ product.handle }}" draggable="true">+</button>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <!-- Popup Modal -->
    <div id="quick-view-popup" class="popup hidden">
      <div class="popup-inner" id="popup-inner">
        <span class="popup-close">&times;</span>
        <div class="popup-content">
          <div class="top-content">
            <img id="popup-image" src="" alt="" width="200" height="200" loading="lazy">
            <h3 id="popup-title"></h3>
            <p id="popup-price"></p>
            <p id="popup-description"></p>
          </div>
          <form id="popup-form">
            <label for="popup-variants">Choose Variant:</label>
            <select id="popup-variants"></select>
            <button id="popup-add-to-cart" type="button">ADD TO CART â†’</button>
          </form>
        </div>
      </div>
    </div>

</div>
</section> 

{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Product Grid with Popup",
      "category": "Products"
    }
  ]
}
{% endschema %}
<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px 15px;
}
section.product-grid-section {
    display: flex;
    justify-content: center;
}
@media(max-width: 768px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
}
.product-card {
  position: relative;
}
.quick-view-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 35px;
  height: 35px;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 50%;
  font-size: 20px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: grab;   /* draggable */
  user-select: none;
}
.quick-view-btn:active {
  cursor: grabbing;
}

/* Popup */
.popup {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
}
.popup.hidden { display: none; }

.popup-inner {
  background: #fff;
  padding: 20px;
  max-width: 400px;
  width: 90%;
  position: relative;
  border-radius: 10px;
  cursor: move; /* hint draggable */
}

.popup-close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 22px;
  cursor: pointer;
}
.product-card {
  position: relative;
  display: inline-block;
}

.drag-icon {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 35px;
  height: 35px;
  background: white;
  border: 1px solid #ccc;
  border-radius: 50%;
  font-size: 20px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: grab;   /* ðŸ‘ˆ show draggable hand */
  user-select: none;
}
.drag-icon:active {
  cursor: grabbing;
}

</style>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.querySelector("#quick-view-popup");
  const closeBtn = document.querySelector(".popup-close"); // fixed
  const titleEl = document.querySelector("#popup-title");
  const priceEl = document.querySelector("#popup-price");
  const descEl = document.querySelector("#popup-description");
  const imgEl = document.querySelector("#popup-image");
  const variantSelect = document.querySelector("#popup-variants");
  const addToCartBtn = document.querySelector("#popup-add-to-cart");

  let currentProduct = null;

  // âœ… Quick View button events
  document.querySelectorAll(".quick-view-btn").forEach(btn => {
    btn.addEventListener("click", e => {
      e.preventDefault();
      const handle = btn.dataset.handle;

      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          currentProduct = product;

          // Fill popup details
          titleEl.textContent = product.title;
          priceEl.textContent =
            (product.price / 100).toFixed(2) + " " + Shopify.currency.active;
          descEl.innerHTML = product.description;
          imgEl.src = product.featured_image;

          // Variants
          variantSelect.innerHTML = "";
          product.variants.forEach(variant => {
            const opt = document.createElement("option");
            opt.value = variant.id;
            opt.textContent = variant.title;
            variantSelect.appendChild(opt);
          });

          popup.classList.remove("hidden");
        });
    });

    // Drag start
    btn.addEventListener("dragstart", e => {
      e.dataTransfer.setData("text/plain", "quick-view");
      btn.style.opacity = "0.5";
    });

    btn.addEventListener("dragend", e => {
      btn.style.opacity = "1";
    });
  });

  // âœ… Close popup
  closeBtn.addEventListener("click", () => {
    popup.classList.add("hidden");
  });

  // âœ… Add to Cart
  addToCartBtn.addEventListener("click", e => {
    e.preventDefault(); // stop form submit
    if (!currentProduct) return;

    const variantId = variantSelect.value;
    const formData = { id: variantId, quantity: 1 };

    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData)
    })
      .then(res => res.json())
      .then(() => {
        alert(`${currentProduct.title} added to cart!`);
        popup.classList.add("hidden");
      })
      .catch(err => {
        console.error("Add to cart error:", err);
        alert("Error adding to cart");
      });
  });
});


</script>
