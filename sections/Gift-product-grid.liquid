<section class="product-grid-section"> 
  <div class="container">
    <h2 class="product-heading">{{ section.settings.heading }}</h2>
    <div class="product-grid">
      {% for block in section.blocks %}
        {% assign product = all_products[block.settings.product] %}
        {% if product %}
          <div class="product-card" data-product-handle="{{ block.settings.product.handle }}">
            <img src="{{ product.featured_image | image_url: width: 350, height: 350, crop: 'center' }}"
                alt="{{ product.featured_image.alt | escape }}" width="350" height="350" loading="lazy">
            <button class="quick-view-btn" data-handle="{{ product.handle }}" draggable="true">+</button>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <!-- Popup Modal -->
  <div id="quick-view-popup" class="popup hidden">
    <div class="popup-inner">
      <span class="popup-close" id="popup-close">&times;</span>
      <div class="popup-body">
        <div class="left-content">
        <!-- Image -->
        <div class="popup-image">
          <img id="popup-image" src="" alt="" width="100" height="200" loading="lazy">
        </div>
        </div>
        <div class="right-content">
          <!-- Details -->
          <div class="popup-details">
            <h3 id="popup-title" class="popup-title"></h3>
            <p id="popup-price" class="popup-price"></p>
            <p id="popup-description" class="popup-description"></p>
          </div>
        </div>
      </div>
      <form id="popup-form" class="popup-form">
            <label>Color</label>
            <div id="popup-color" class="variant-color-btn"></div>
            <label>Size</label>
            <select id="popup-size"></select>       
            <button id="popup-add-to-cart" type="button" class="popup-add-btn">
                ADD TO CART â†’
            </button>
      </form>        
    </div>
    </div>
  </div>
</section> 

{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Product Grid with Popup",
      "category": "Products"
    }
  ]
}
{% endschema %}
<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 15px 15px;
}
.product-grid-section .container {
    max-width: 1600px;
    margin: 0 auto;
    padding: 0 15px;
}
.product-grid-section {
    display: flex;
}
.product-card img {
    width: 100%;
    height: 100%;
}
.product-card {
  position: relative;
}
.quick-view-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 35px;
  height: 35px;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 50%;
  font-size: 20px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor:pointer;
}
.quick-view-btn:active {
  cursor: grabbing;
}

/* Popup overlay */
.popup {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.popup.hidden { display: none; }

/* Popup box */
.popup-inner {
  background: #fff;
  border-radius: 6px;
  max-width: 450px;
  width: 90%;
  padding: 20px;
  position: relative;
  box-shadow: 0 5px 25px rgba(0,0,0,0.25);
}

/* Close button */
.popup-close {
  position: absolute;
  top: 12px;
  right: 12px;
  font-size: 22px;
  cursor: pointer;
}

/* Layout */
.popup-body {
    display: flex;
    gap: 15px;
    flex-wrap: nowrap;
}
.right-content {
    width: 60%;
}
.left-content {
    width: 40%;
}
.popup-image {
  flex: 1 1 40%;
}

.popup-image img {
  width: 100%;
  height:190px;
}

.popup-details {
  flex: 1 1 55%;
}

/* Text */
.popup-title {
  font-size: 20px;
  font-weight: 700;
  margin:0px;
}
.popup-price {
    font-size: 18px;
    font-weight: 600;
    margin: 10px 0px 0px 0px;
    color: #000;
}
.popup-description {
  font-size: 14px;
  color: #444;
  margin-bottom: 15px;
}

/* Variants */
.variant-group {
  margin-bottom: 15px;
}

.variant-group label {
  display: block;
  font-size: 14px;
  margin-bottom: 6px;
  font-weight: 600;
}

.variant-options {
  display: flex;
  gap: 10px;
}

.variant-options button {
  flex: 1;
  padding: 10px;
  border: 1px solid #333;
  background: #fff;
  cursor: pointer;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.variant-options button.active,
.variant-options button:hover {
  background: #000;
  color: #fff;
}

#popup-variants {
  width: 100%;
  padding: 10px;
  border-radius: 4px;
  border: 1px solid #333;
  background: #fff;
}
#popup-color {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* auto 2; adjust if you have more colours */
  gap: 0;
  border-radius: 4px;
  overflow: hidden;
}
#popup-color .variant-color-btn {
  padding: 10px 14px;
  background: #fff;
  border: none;
  border-right: 1px solid #1a1a1a;
  cursor: pointer;
  font: inherit;
}
#popup-color .variant-color-btn:last-child { border-right: 0; }
#popup-color .variant-color-btn.active { background: #0b0b0b; color: #fff; }
#popup-variants {
  width: 100%;
  padding: 12px;
  border: 1px solid #1a1a1a;
  border-radius: 4px;
  background: #fff;
}

/* Add to Cart */
.popup-add-btn {
  background: #000;
  color: #fff;
  border: none;
  width: 100%;
  padding: 14px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  border-radius: 4px;
  transition: background 0.2s ease;
}

.popup-add-btn:hover {
  background: #333;
}
.drag-icon {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 35px;
  height: 35px;
  background: white;
  border: 1px solid #ccc;
  border-radius: 50%;
  font-size: 20px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.drag-icon:active {
  cursor: grabbing;
}
/* Mobile responsive */
@media(max-width: 768px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
  .quick-view-btn {
    top: 18px;
    right: 52px;
    width: 15px;
    height: 15px;
    font-size: 12px;
}
@media (max-width: 600px) {
  .popup-body {
    flex-direction: column;
  }
}
</style>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.querySelector("#quick-view-popup");
  const closeBtn = document.querySelector(".popup-close");
  const titleEl = document.querySelector("#popup-title");
  const priceEl = document.querySelector("#popup-price");
  const descEl  = document.querySelector("#popup-description");
  const imgEl   = document.querySelector("#popup-image");
  const colorWrap = document.querySelector("#popup-color");   // color buttons
  const sizeSelect = document.querySelector("#popup-size");   // size dropdown
  const addBtn  = document.querySelector("#popup-add-to-cart");

  let product = null;
  let selectedColor = null;
  let selectedSize = null;

  // Helpers
  const uniq = arr => [...new Set(arr.filter(Boolean))];
  const formatPrice = c => (c / 100).toFixed(2) + " " + (Shopify.currency?.active || "");
  const variantImageUrl = v =>
    v.featured_image ? (v.featured_image.src || v.featured_image) : (product.featured_image || product.images[0] || "");

  // Match variant by color + size
  function matchVariant() {
    return product.variants.find(v => {
      const okColor = selectedColor ? v.option1 === selectedColor : true;
      const okSize  = selectedSize ? v.option2 === selectedSize : true;
      return okColor && okSize;
    });
  }

  // Render Color buttons (option1)
  function renderColors() {
    const colors = uniq(product.variants.map(v => v.option1));
    colorWrap.innerHTML = "";
    colors.forEach(c => {
      const b = document.createElement("button");
      b.type = "button";
      b.className = "variant-color-btn";
      b.textContent = c;
      if (c === selectedColor) b.classList.add("active");
      b.addEventListener("click", () => {
        selectedColor = c;
        renderSizes();
        updateVariant();
        renderColors();
      });
      colorWrap.appendChild(b);
    });
  }

  // Render Size dropdown (option2 filtered by color)
  function renderSizes() {
    const sizes = uniq(
      product.variants
        .filter(v => !selectedColor || v.option1 === selectedColor)
        .map(v => v.option2)
    );
    sizeSelect.innerHTML = "";
    const ph = document.createElement("option");
    ph.value = "";
    ph.textContent = "Choose your size";
    ph.disabled = true;
    ph.selected = true;
    sizeSelect.appendChild(ph);
    sizes.forEach(s => {
      const o = document.createElement("option");
      o.value = s;
      o.textContent = s;
      if (s === selectedSize) o.selected = true;
      sizeSelect.appendChild(o);
    });
    sizeSelect.addEventListener("change", () => {
      selectedSize = sizeSelect.value;
      updateVariant();
    });
  }

  // Update price + image + add-to-cart
  function updateVariant() {
    const v = matchVariant();
    if (v) {
      priceEl.textContent = formatPrice(v.price);
      imgEl.src = variantImageUrl(v);
      addBtn.dataset.variantId = v.id;
    }
  }

  // Open popup
  function openQuickView(handle) {
    fetch(`/products/${handle}.js`)
      .then(r => r.json())
      .then(p => {
        product = p;
        selectedColor = null;
        selectedSize = null;

        titleEl.textContent = p.title;
        descEl.innerHTML = p.description || "";
        priceEl.textContent = formatPrice(p.price);
        imgEl.src = p.featured_image || p.images[0];

        renderColors();
        renderSizes();
        popup.classList.remove("hidden");
      });
  }

  // Quick view button binding
  document.querySelectorAll(".quick-view-btn").forEach(btn => {
    btn.addEventListener("click", e => {
      e.preventDefault();
      openQuickView(btn.dataset.handle);
    });
  });

  // Close popup
  closeBtn.addEventListener("click", () => popup.classList.add("hidden"));

  // Add to cart
  addBtn.addEventListener("click", e => {
    e.preventDefault();
    const id = addBtn.dataset.variantId;
    if (!id) { alert("Please select color & size"); return; }
    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id, quantity: 1 })
    })
    .then(r => r.json())
    .then(() => {
      alert("Added to cart!");
      popup.classList.add("hidden");
    });
  });
});
</script>




